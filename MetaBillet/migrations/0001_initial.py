# Generated by Django 4.2.11 on 2024-04-18 07:41

from django.db import migrations, models
import django.db.models.deletion
import stdimage.models
import stdimage.validators
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('Customers', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='WaitingConfiguration',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('organisation', models.CharField(db_index=True, max_length=50, verbose_name="Nom de l'organisation")),
                ('slug', models.SlugField(default='')),
                ('short_description', models.CharField(blank=True, max_length=250, null=True, verbose_name='Description courte')),
                ('long_description', models.TextField(blank=True, null=True, verbose_name='Description longue')),
                ('adress', models.CharField(blank=True, max_length=250, null=True, verbose_name='Adresse')),
                ('postal_code', models.IntegerField(blank=True, null=True, verbose_name='Code postal')),
                ('city', models.CharField(blank=True, max_length=250, null=True, verbose_name='Ville')),
                ('phone', models.CharField(max_length=20, verbose_name='Téléphone')),
                ('email', models.EmailField(max_length=254)),
                ('site_web', models.URLField(blank=True, null=True)),
                ('legal_documents', models.URLField(blank=True, null=True, verbose_name='Statuts associatif')),
                ('twitter', models.URLField(blank=True, null=True)),
                ('facebook', models.URLField(blank=True, null=True)),
                ('instagram', models.URLField(blank=True, null=True)),
                ('map_img', stdimage.models.JPEGField(blank=True, force_min_size=False, null=True, upload_to='images/', validators=[stdimage.validators.MaxSizeValidator(1920, 1920)], variations={'fhd': (1920, 1920), 'hdr': (720, 720), 'med': (480, 480), 'thumbnail': (150, 90)}, verbose_name='Carte géographique')),
                ('carte_restaurant', stdimage.models.JPEGField(blank=True, force_min_size=False, null=True, upload_to='images/', validators=[stdimage.validators.MaxSizeValidator(1920, 1920)], variations={'fhd': (1920, 1920), 'hdr': (720, 720), 'med': (480, 480), 'thumbnail': (150, 90)}, verbose_name='Carte du restaurant')),
                ('img', stdimage.models.JPEGField(blank=True, force_min_size=False, null=True, upload_to='images/', validators=[stdimage.validators.MinSizeValidator(720, 135)], variations={'crop': (480, 270, True), 'crop_hdr': (960, 540, True), 'fhd': (1920, 1920), 'hdr': (720, 720), 'med': (480, 480), 'thumbnail': (150, 90)}, verbose_name='Background')),
                ('stripe_connect_account', models.CharField(blank=True, max_length=21, null=True)),
                ('fuseau_horaire', models.CharField(choices=[('Indian/Reunion', 'Indian/Reunion'), ('Europe/Paris', 'Europe/Paris')], default='Indian/Reunion', max_length=50)),
                ('logo', stdimage.models.StdImageField(blank=True, force_min_size=False, null=True, upload_to='images/', validators=[stdimage.validators.MaxSizeValidator(1920, 1920)], variations={'fhd': (1920, 1920), 'hdr': (720, 720), 'med': (480, 480), 'thumbnail': (300, 120)}, verbose_name='Logo')),
                ('categorie', models.CharField(choices=[('A', 'Artiste'), ('S', 'Lieu de spectacle vivant'), ('F', 'Festival'), ('T', 'Tourneur'), ('P', 'Producteur'), ('M', 'Agenda culturel'), ('R', 'Tenant public root')], default='S', max_length=3, verbose_name='Categorie')),
            ],
            options={
                'verbose_name': 'Paramètres',
                'verbose_name_plural': 'Paramètres',
            },
        ),
        migrations.CreateModel(
            name='ProductDirectory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_sold_stripe_id', models.CharField(blank=True, max_length=30, null=True)),
                ('place', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_place', to='Customers.client')),
            ],
        ),
        migrations.CreateModel(
            name='EventDirectory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime', models.DateTimeField()),
                ('event_uuid', models.UUIDField()),
                ('artist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='artist', to='Customers.client')),
                ('place', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='place', to='Customers.client')),
            ],
        ),
    ]
