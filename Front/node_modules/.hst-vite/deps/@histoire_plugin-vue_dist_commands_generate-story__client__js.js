import "./chunk-76J2PTFD.js";

// node_modules/@histoire/plugin-vue/dist/commands/generate-story.client.js
import { sendEvent, openStory } from "histoire/plugin";

// node_modules/tslib/tslib.es6.mjs
var __assign = function() {
  __assign = Object.assign || function __assign2(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign.apply(this, arguments);
};

// node_modules/lower-case/dist.es2015/index.js
function lowerCase(str) {
  return str.toLowerCase();
}

// node_modules/no-case/dist.es2015/index.js
var DEFAULT_SPLIT_REGEXP = [/([a-z0-9])([A-Z])/g, /([A-Z])([A-Z][a-z])/g];
var DEFAULT_STRIP_REGEXP = /[^A-Z0-9]+/gi;
function noCase(input, options) {
  if (options === void 0) {
    options = {};
  }
  var _a = options.splitRegexp, splitRegexp = _a === void 0 ? DEFAULT_SPLIT_REGEXP : _a, _b = options.stripRegexp, stripRegexp = _b === void 0 ? DEFAULT_STRIP_REGEXP : _b, _c = options.transform, transform = _c === void 0 ? lowerCase : _c, _d = options.delimiter, delimiter = _d === void 0 ? " " : _d;
  var result = replace(replace(input, splitRegexp, "$1\0$2"), stripRegexp, "\0");
  var start = 0;
  var end = result.length;
  while (result.charAt(start) === "\0")
    start++;
  while (result.charAt(end - 1) === "\0")
    end--;
  return result.slice(start, end).split("\0").map(transform).join(delimiter);
}
function replace(input, re, value) {
  if (re instanceof RegExp)
    return input.replace(re, value);
  return re.reduce(function(input2, re2) {
    return input2.replace(re2, value);
  }, input);
}

// node_modules/dot-case/dist.es2015/index.js
function dotCase(input, options) {
  if (options === void 0) {
    options = {};
  }
  return noCase(input, __assign({ delimiter: "." }, options));
}

// node_modules/param-case/dist.es2015/index.js
function paramCase(input, options) {
  if (options === void 0) {
    options = {};
  }
  return dotCase(input, __assign({ delimiter: "-" }, options));
}

// node_modules/@histoire/plugin-vue/dist/commands/generate-story.client.js
var generate_story_client_default = {
  prompts: [
    {
      field: "component",
      label: "Choose a component",
      type: "select",
      options: async (search) => sendEvent("listVueComponents", { search }),
      required: true
    },
    {
      field: "fileName",
      label: "File name",
      type: "text",
      required: true,
      defaultValue: (answers) => {
        var _a;
        return (_a = answers.component) == null ? void 0 : _a.replace(/.+\/(.+?)\.vue$/, "$1.story.vue");
      }
    }
  ],
  clientAction: (params) => {
    const index = params.component.lastIndexOf("/");
    const dirname = params.component.substring(0, index + 1);
    const file = `${dirname}${params.fileName}`;
    const storyId = paramCase(file.toLowerCase());
    openStory(storyId);
  }
};
export {
  generate_story_client_default as default
};
//# sourceMappingURL=@histoire_plugin-vue_dist_commands_generate-story__client__js.js.map
