version: '3'
services:
  lespass_postgres:
    image: postgres:13-bookworm
    restart: unless-stopped
    container_name: lespass_postgres
    hostname: lespass_postgres
    volumes:
      - ./database:/var/lib/postgresql/data
    env_file: .env
    networks:
      - lespass_backend

  lespas_redis:
    container_name: lespas_redis
    hostname: lespas_redis
    image: redis:7.2.3-bookworm
    restart: unless-stopped
    networks:
      - lespass_backend

  lespass_django:
    image: tibillet/lespass:latest
    restart: unless-stopped
    container_name: lespass_django
    hostname: lespass_django
    volumes:
      - ./www:/DjangoFiles/www
      - ./logs:/DjangoFiles/logs
      - ./backup:/Backup
    env_file: .env
    depends_on:
      - lespass_postgres
      - lespas_redis
    links:
      - lespass_postgres:postgres
      - lespas_redis:redis
    networks:
      - lespass_backend

  lespass_celery:
    image: tibillet/lespass:latest
    container_name: lespass_celery
    hostname: lespass_celery
    env_file: .env
    depends_on:
      - lespass_postgres
      - lespas_redis
    links:
      - lespass_postgres:postgres
      - lespas_redis:redis
    command: "poetry run celery -A TiBillet worker -l INFO"
    networks:
      - lespass_backend


  lespass_nginx:
    image: nginx:latest
    container_name: lespass_nginx
    hostname: lespass_nginx
    links:
      - lespass_django:lespass_django
    volumes:
      - ./www:/www
      - ./logs:/logs
      - ./nginx:/etc/nginx/conf.d
    labels:
      - traefik.enable=true
      - traefik.docker.network=frontend
      - traefik.http.routers.billetterie.tls.certresolver=myresolver
      - traefik.http.routers.billetterie.rule=Host(`$DOMAIN`) || Host(`www.$DOMAIN`) || Host(`$META.$DOMAIN`) || Host(`$SUB.$DOMAIN`)
    networks:
      - frontend
      - lespass_backend



networks:
  frontend:
    external: true
  lespass_backend:

