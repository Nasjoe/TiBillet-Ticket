# Generated by Django 3.2 on 2022-02-11 09:46

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('Customers', '0001_initial'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='TibilletUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email')),
                ('email_error', models.BooleanField(default=False)),
                ('username', models.CharField(max_length=200, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=200, null=True)),
                ('last_name', models.CharField(blank=True, max_length=200, null=True)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('last_see', models.DateTimeField(auto_now=True)),
                ('accept_newsletter', models.BooleanField(default=True, verbose_name="J'accepte de recevoir la newsletter")),
                ('postal_code', models.IntegerField(blank=True, null=True)),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('can_create_tenant', models.BooleanField(default=False, verbose_name='Peux cr√©er des tenants')),
                ('espece', models.CharField(choices=[('TE', 'Terminal'), ('AN', 'Android'), ('HU', 'Humain')], default='HU', max_length=2)),
                ('offre', models.CharField(choices=[('PU', 'Public'), ('FR', 'Gratuit'), ('PR', 'Premium'), ('EN', 'Entreprise'), ('CU', 'Custom')], default='PU', max_length=2)),
                ('client_achat', models.ManyToManyField(blank=True, related_name='user_achats', to='Customers.Client')),
                ('client_admin', models.ManyToManyField(blank=True, related_name='user_admin', to='Customers.Client')),
                ('client_source', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_principal', to='Customers.client', verbose_name='Inscription depuis')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Membership',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('first_contribution', models.DateField(blank=True, null=True)),
                ('last_contribution', models.DateField(blank=True, null=True)),
                ('contribution_value', models.FloatField(blank=True, null=True)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='Customers.client')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='membership', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='HumanUser',
            fields=[
            ],
            options={
                'verbose_name': 'Utilisateur',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('AuthBillet.tibilletuser',),
        ),
        migrations.CreateModel(
            name='SuperHumanUser',
            fields=[
            ],
            options={
                'verbose_name': 'Administrateur',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('AuthBillet.tibilletuser',),
        ),
        migrations.CreateModel(
            name='TermUser',
            fields=[
            ],
            options={
                'verbose_name': 'Terminal',
                'verbose_name_plural': 'Terminaux',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('AuthBillet.tibilletuser',),
        ),
    ]
