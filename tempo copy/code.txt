template:
<!--
  <div class="container-fluid vw-100 vh-100 d-flex justify-content-center align-items-center"
       :style="`background-image: url('${wizardBackground}');background-repeat:no-repeat;background-size:100% 100%;`">
    <div class="container">
      <div class="card wizard-card" data-color="red">
        <form action="" method="">
          <div class="wizard-header">
            <h3 class="wizard-title">
              Créer votre espace
            </h3>
            <h5>Sélectionner, éditer un type d'espace.</h5>
          </div>

          <div class="wizard-navigation">
            <ul class="nav nav-pills">
              <li :style="{width: itemNavWidth + '%'}" data-cible="espace" class="tab-nav-item">
                Espace
              </li>
              <li :style="{width: itemNavWidth + '%'}" data-cible="informations" class="tab-nav-item">
                Informations
              </li>
              <li :style="{width: itemNavWidth + '%'}" data-cible="validation" class="tab-nav-item">
                Validation
              </li>
            </ul>
            <div class="bt-tab btn-wizard" :style="styleBtMobile">
              Espace
            </div>
          </div>
          <div class="tab-content ps-3 pe-3">
            <div id="espace" class="tab-pane" style="display:block;">
              contenu espace
            </div>
            <div id="informations" class="tab-pane">
              contenu informations
            </div>
            <div id="validation" class="tab-pane">
              contenu validation
            </div>
          </div>

          <div class="d-flex wizard-footer">
            <div class="w-50 d-flex flex-column">
             <button v-if="etape > 0" class="btn btn-wizard btn-previous align-self-start" @click="wizardPrev($event)">Previous</button>
            </div>
           <div class="w-50  d-flex flex-column">
            <button v-if="etape <= 1" type="button" class="btn btn-wizard btn-danger align-self-end" @click="wizardNext($event)">Next</button>
            <button v-if="etape === (getNbItemNav() - 1)" type="button" class="btn btn-wizard btn-primary align-self-end">Finish</button>
           </div>
          </div>
        </form>
      </div>
    </div>
  </div>
  -->
------------------------------------------------
js:
let itemNavWidth = ref(0)
let etape = ref(0)

updateHeader(null)

function wizardNext(evt) {
  evt.preventDefault()
  const index = etape.value + 1
  document.querySelector(`ul[class="nav nav-pills"] li[index="${index}"]`).click()
}

function wizardPrev(evt) {
  evt.preventDefault()
  const index = etape.value - 1
  document.querySelector(`ul[class="nav nav-pills"] li[index="${index}"]`).click()
}

function getNbItemNav() {
  return document.querySelectorAll('ul[class="nav nav-pills"] li').length
}

function moveBt (event) {
  const ele = event.target
  // text du bouton mobile
  document.querySelector('div[class~="bt-tab"]').innerText = ele.innerText
  // animation
  const index = parseInt(ele.getAttribute('index'))
  etape.value = index
  const nbItem = getNbItemNav()
  const navWidth = (document.querySelector('ul[class="nav nav-pills"]').offsetWidth / nbItem)
  const itemNavs = document.querySelectorAll('ul[class="nav nav-pills"] li')
  let decX = 0
  if (index === 0) {
    decX = -8
  }
  if (index + 1 === nbItem) {
    decX = 8
  }
  styleBtMobile.value.transform = `translate3d(${decX + (index * navWidth)}px, 0px, 0px)`
  // désactivation / activation des onglets
  document.querySelectorAll('div[class="tab-pane"]').forEach(tab => {
    tab.style.display = "none"
  })
  document.querySelector('#' + ele.getAttribute('data-cible')).style.display = "block"
}

function init () {
  const itemNavs = document.querySelectorAll('ul[class="nav nav-pills"] li')
  itemNavWidth.value = (100 / itemNavs.length).toFixed(3)
  styleBtMobile.value.width = itemNavWidth.value + '%'

  // console.log('itemNavWidth.value =', itemNavWidth.value)
  // console.log('styleBtMobile.value =', styleBtMobile)
  for (let i = 0; i < itemNavs.length; i++) {
    const item = itemNavs[i]
    item.setAttribute('index', i)
    item.addEventListener('click', moveBt)
  }
}

addEventListener('resize', init)

onMounted(() => init())

// ne pas laisser trainer des "eventListener"
onBeforeUnmount(() => {
  const itemNavs = document.querySelectorAll('ul[class="nav nav-pills"] li')
  for (let i = 0; i < itemNavs.length; i++) {
    const item = itemNavs[i]
    item.removeEventListener('click', moveBt)
  }
  removeEventListener('resize', init)
})
